version: v4

base: docker-registry.wikimedia.org/python3-bullseye:latest

runs:
  environment:
    PYTHONBUFFERED: "1"
    PYTHONDONTWRITEBYTECODE: "1"
    PYTHONUTF8: "1"  # T310724
    PIP_NO_CACHE_DIR: "off"
    PIP_DISABLE_PIP_VERSION_CHECK: "on"

variants:
  base-python:
    # Provides the basic foundation for all other python runtime containers
    # needed to develop, test, and run.
    apt:
      packages:
        - gettext
        - git
        - python3-dev
        # The python3-venv package is needed to supply the `ensurepip`
        # command. Having ensurepip available is a requirement of Poetry.
        - python3-venv  # FIXME: should be in the base image OR added by Blubber
    python:
      version: python3
      poetry:
        version: ==1.3.1
      requirements:
        - pyproject.toml
        - poetry.lock

  dev-python:
    # Development/testing shared base for python runtime containers
    includes:
      - base-python
    runs:
      # Mark as insecure so that the runtime user can modify content. This is
      # needed so that we can use the container's runtime for our local
      # development needs such as updating poetry.lock and running tox.
      insecurely: true
    python:
      poetry:
        devel: true
    copies:
      - from: local
        source: .
        destination: .

  lint:
    includes:
      - dev-python
    entrypoint:
      - sh
      - -c
      - >-
        poetry check &&
        poetry run flake8 &&
        poetry run black --check --diff .

  build:
    includes:
      - dev-python
    builder:
      requirements:
        - from: local
          source: .
          destination: .
      command:
        - sh
        - -c
        - >-
          poetry install
          && ls -alh
          && poetry run mkdocs --verbose build
          && git diff --no-ext-diff --compact-summary --exit-code data/locale/en/LC_MESSAGES/mkdocs.po

  production:
    base: docker-registry.wikimedia.org/bullseye:latest
    runs:
      as: www-data
      uid: 33
      gid: 33
    lives:
      in: /var/www/html
    apt:
      packages:
        - nginx-light
    copies:
      - from: build
        source: /srv/app/site
        destination: .
      - from: build
        source: /srv/app/contrib/nginx/production.conf
        destination: /etc/nginx/developer-portal.conf
    entrypoint:
      - nginx
      - -c
      - /etc/nginx/developer-portal.conf

  local:
    # Local development container
    includes:
      - dev-python
    apt:
      packages:
        - nginx-light
